name: "Workflow to run 3C on edk 2 and upload the results"

on:
  workflow_dispatch:
    inputs:
      options:
        description: "Space separated list of options to run 3C with."
        required: false

jobs:
  clone:
    runs-on: self-hosted
    steps:
      - name: Check cache
        id: cache
        run: |
          echo "{cache-hit1}={1}" >> $GITHUB_OUTPUT
          echo "{cache-hit2}={1}" >> $GITHUB_OUTPUT
          if [ -d /home/sourag/repos/edk2 ]; then
            echo "{cache-hit1}={0}" >> $GITHUB_OUTPUT
          fi
          if [ -d /home/sourag/repos/checkedc-llvm-project ]; then
            echo "{cache-hit2}={0}" >> $GITHUB_OUTPUT
          fi

      # If cache is not found, then clone the edk2 and 3C repos.
      - name: Clone edk2
        if: steps.cache.outputs.cache-hit1 != 0
        run: |
          git clone https://github.com/tianocore/edk2.git /home/sourag/repos/edk2
          cd /home/sourag/repos/edk2 && git submodule update --init
      
      - name: Clone 3C
        if: steps.cache.outputs.cache-hit2 != 0
        run: |
          git clone https://github.com/3clsp/checkedc-llvm-project.git /home/sourag/repos/checkedc-llvm-project

        # This step pulls the latest changes from the edk2 and 3C repos
        # It doesn't matter if there was a cache hit or not since
        # pulling right after cloning doesn't have any affect.
      - name: Pull latest changes for edk2
        working-directory: /home/sourag/repos/edk2
        run: |
          git pull

      - name: Pull latest changes for 3C
        working-directory: /home/sourag/repos/checkedc-llvm-project
        run: |
          git pull

  patch:
    runs-on: self-hosted
    needs: clone

    # We need to update the edk2 repo's build script to generate compile_commands.json
    # Use the build.py from our repo to do this.
    steps:
      # Checkout is neede here since we will be using files from the repo.
      - name: Checkout
        uses: actions/checkout@v4

      - name: Patch edk2
        run: |
          cp $GITHUB_WORKSPACE/build.py /home/sourag/repos/edk2/BaseTools/Source/Python/build/build.py
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}

      # Copy helper scripts to the 3C repo
      - name: Patch 3C
        run: |
          cp $GITHUB_WORKSPACE/run_3c.py /home/sourag/repos/checkedc-llvm-project/clang/tools/3c/utils/port_tools/run_3c.py
          cp $GITHUB_WORKSPACE/remove_msabi.py /home/sourag/repos/checkedc-llvm-project/clang/tools/3c/utils/port_tools/remove_msabi.py
          cp $GITHUB_WORKSPACE/generate_ccommands.py /home/sourag/repos/checkedc-llvm-project/clang/tools/3c/utils/port_tools/generate_ccommands.py
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
  
  build_3c:
    runs-on: self-hosted
    needs: patch

    steps:
      # edk2 will be built inside the docker container.
      # We only build the 3C repo on the host.
      - name: Build 3C
        working-directory: /home/sourag/repos/checkedc-llvm-project
        run: |
          mkdir -p build
          cd build
          cmake -G Ninja -DLLVM_ENABLE_PROJECTS="clang" -DCMAKE_BUILD_TYPE=Release  -DLLVM_TARGETS_TO_BUILD=X86 ../llvm
          ninja 3c

  build_docker:
    runs-on: self-hosted
    needs: build_3c

    steps:
      - name: Build docker image
        run: |
          docker build -t edk2-3c $GITHUB_WORKSPACE
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}

      # Start the container with both the edk2 and 3C repos mounted.
      - name: Start docker container
        run: |
          docker run -di --name edk2-3c-container -v /home/sourag/repos/edk2:/edk2 -v \
          /home/sourag/repos/checkedc-llvm-project:/checkedc-llvm-project edk2-3c

  build_edk2:
    runs-on: self-hosted
    needs: build_docker

    steps:
      # Delete the old Build folder if it exists
      - name: Delete old build folder
        env:
          PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          if [ -d /home/sourag/repos/edk2/Build ]; then
            echo $PASSWORD | sudo -S rm -rf /home/sourag/repos/edk2/Build
          fi

      # Normal build process for edk2, but inside the docker container.
      - name: Build edk2
        run: |
          docker exec edk2-3c-container bash -c \
          "cd /edk2 \
          && source edksetup.sh \
          && make -C BaseTools \
          && OvmfPkg/build.sh -t CLANGPDB"
      
      # MS ABI causes issues with clang source manager.
      - name: Ramove ms_abi
        run: |
          docker exec edk2-3c-container bash -c \
          "cd /checkedc-llvm-project/clang/tools/3c/utils/port_tools \
          && python3 remove_msabi.py"

  run_3c:
    runs-on: self-hosted
    needs: build_edk2

    steps:
      # Delete old results if they exist
      - name: Delete old results
        env:
          PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          if [ -d /home/sourag/repos/checkedc-llvm-project/clang/tools/3c/utils/port_tools/jsons ]; then
            echo $PASSWORD | sudo -S rm -rf /home/sourag/repos/checkedc-llvm-project/clang/tools/3c/utils/port_tools/jsons
          fi
          if [ -d /home/sourag/repos/checkedc-llvm-project/clang/tools/3c/utils/port_tools/failed ]; then
            echo $PASSWORD | sudo -S rm -rf /home/sourag/repos/checkedc-llvm-project/clang/tools/3c/utils/port_tools/failed
          fi

      # Invoke the script which calls 3c on all modules separately.
      - name: Run 3C
        run: |
          docker exec edk2-3c-container bash -c \
          "cd /checkedc-llvm-project/clang/tools/3c/utils/port_tools \
          && python3 run_3c.py ${{ github.event.inputs.options }}"

  run_analysis_and_upload_results:
    runs-on: self-hosted
    needs: run_3c

    steps:
      - name: Copy results
        run: |
          echo $PASSWORD | sudo -S mv /home/sourag/repos/checkedc-llvm-project/clang/tools/3c/utils/port_tools/jsons $GITHUB_WORKSPACE
          echo $PASSWORD | sudo -S mv /home/sourag/repos/checkedc-llvm-project/clang/tools/3c/utils/port_tools/failed $GITHUB_WORKSPACE
          echo $PASSWORD | sudo -S chown -R $USER:$USER $GITHUB_WORKSPACE/jsons
          echo $PASSWORD | sudo -S chown -R $USER:$USER $GITHUB_WORKSPACE/failed
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
          PASSWORD: ${{ secrets.PASSWORD }}
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: 3c-results
          path: ${{ github.workspace }}/jsons
          retention-days: 1

  cleanup:
    runs-on: self-hosted
    needs: run_analysis_and_upload_results

    steps:
      # Removing container is needed to avoid conflicts with the next run.
      # If we don't remove the container, the next run will fail.
      - name: Stop docker container
        run: |
          docker stop edk2-3c-container
          docker rm edk2-3c-container
